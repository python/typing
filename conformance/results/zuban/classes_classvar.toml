conformance_automated = "Pass"
errors_diff = """
"""
output = """
classes_classvar.py:38: error: ClassVar[...] must have at most one type argument  [misc]
classes_classvar.py:39: error: Invalid type: try using Literal[3] instead?  [valid-type]
classes_classvar.py:40: error: Name "var" is not defined  [name-defined]
classes_classvar.py:45: error: ClassVar cannot contain type variables  [misc]
classes_classvar.py:46: error: ClassVar cannot contain type variables  [misc]
classes_classvar.py:47: error: ClassVar cannot contain type variables  [misc]
classes_classvar.py:52: error: Incompatible types in assignment (expression has type "dict[Never, Never]", variable has type "list[str]")  [assignment]
classes_classvar.py:54: error: Variable should not be annotated with both ClassVar and Final  [misc]
classes_classvar.py:55: error: Invalid Type: ClassVar nested inside other type  [misc]
classes_classvar.py:66: error: Type in ClassVar[...] can only be omitted if there is an initializer  [misc]
classes_classvar.py:69: error: ClassVar can only be used for assignments in class body  [misc]
classes_classvar.py:70: error: ClassVar can only be used for assignments in class body  [misc]
classes_classvar.py:71: error: ClassVar can only be used for assignments in class body  [misc]
classes_classvar.py:73: error: ClassVar can only be used for assignments in class body  [misc]
classes_classvar.py:77: error: ClassVar can only be used for assignments in class body  [misc]
classes_classvar.py:78: error: ClassVar can only be used for assignments in class body  [misc]
classes_classvar.py:111: error: Cannot assign to class variable "stats" via instance  [misc]
classes_classvar.py:140: error: Incompatible types in assignment (expression has type "ProtoAImpl", variable has type "ProtoA")  [assignment]
classes_classvar.py:140: note: Protocol member ProtoA.x expected class variable, got instance variable
classes_classvar.py:140: note: Protocol member ProtoA.y expected class variable, got instance variable
classes_classvar.py:140: note: "ProtoAImpl" is missing following "ProtoA" protocol member:
classes_classvar.py:140: note:     z
"""
