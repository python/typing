conformance_automated = "Pass"
errors_diff = """
"""
output = """
generics_paramspec_basic.py:10: error: String argument 1 "NotIt" to ParamSpec(...) does not match variable name "WrongName"
generics_paramspec_basic.py:15: error: Invalid location for ParamSpec "P"
generics_paramspec_basic.py:15: note: You can use ParamSpec as the first argument to Callable, e.g., "Callable[P, int]"
generics_paramspec_basic.py:23: error: Invalid location for ParamSpec "P"
generics_paramspec_basic.py:23: note: You can use ParamSpec as the first argument to Callable, e.g., "Callable[P, int]"
generics_paramspec_basic.py:23: error: Invalid location for ParamSpec "P"
generics_paramspec_basic.py:23: note: You can use ParamSpec as the first argument to Callable, e.g., "Callable[P, int]"
generics_paramspec_basic.py:27: error: Invalid location for Concatenate
generics_paramspec_basic.py:27: note: You can use Concatenate as the first argument to Callable
generics_paramspec_basic.py:31: error: Invalid location for ParamSpec "P"
generics_paramspec_basic.py:31: note: You can use ParamSpec as the first argument to Callable, e.g., "Callable[P, int]"
generics_paramspec_basic.py:35: error: Invalid location for ParamSpec "P"
generics_paramspec_basic.py:35: note: You can use ParamSpec as the first argument to Callable, e.g., "Callable[P, int]"
generics_paramspec_basic.py:39: error: Invalid location for ParamSpec "P"
generics_paramspec_basic.py:39: note: You can use ParamSpec as the first argument to Callable, e.g., "Callable[P, int]"
generics_paramspec_basic.py:39: error: Invalid location for ParamSpec "P"
generics_paramspec_basic.py:39: note: You can use ParamSpec as the first argument to Callable, e.g., "Callable[P, int]"
"""
