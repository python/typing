conformant = "Pass"
conformance_automated = "Pass"
errors_diff = """
"""
output = """
overloads_definitions.py:16:5 - error: "func1" is marked as overload, but additional overloads are missing (reportInconsistentOverload)
overloads_definitions.py:28:5 - error: "func2" is marked as overload, but no implementation is provided (reportNoOverloadImplementation)
overloads_definitions.py:59:9 - error: "not_abstract" is marked as overload, but no implementation is provided (reportNoOverloadImplementation)
overloads_definitions.py:73:9 - error: Overloads for "func5" use @staticmethod inconsistently (reportInconsistentOverload)
overloads_definitions.py:81:9 - error: Overloaded implementation is not consistent with signature of overload 1
  Type "(self: Self@C, x: int | str) -> (int | str)" is not assignable to type "(x: int) -> int"
    Parameter name mismatch: "x" versus "self"
    Parameter 1: type "int" is incompatible with type "Self@C"
      Type "int" is not assignable to type "Self@C"
    Extra parameter "x" (reportInconsistentOverload)
overloads_definitions.py:81:9 - error: Overloaded implementation is not consistent with signature of overload 2
  Type "(self: Self@C, x: int | str) -> (int | str)" is not assignable to type "(x: str) -> str"
    Parameter name mismatch: "x" versus "self"
    Parameter 1: type "str" is incompatible with type "Self@C"
      Type "str" is not assignable to type "Self@C"
    Extra parameter "x" (reportInconsistentOverload)
overloads_definitions.py:86:9 - error: Overloads for "func6" use @classmethod inconsistently (reportInconsistentOverload)
overloads_definitions.py:90:15 - warning: Instance methods should take a "self" parameter (reportSelfClsParameterName)
overloads_definitions.py:123:9 - error: @final decorator should be applied only to the implementation (reportInconsistentOverload)
overloads_definitions.py:137:9 - error: @final decorator should be applied only to the implementation (reportInconsistentOverload)
overloads_definitions.py:142:9 - error: @final decorator should be applied only to the implementation (reportInconsistentOverload)
overloads_definitions.py:181:9 - error: Method "final_method" cannot override final method defined in class "Base" (reportIncompatibleMethodOverride)
overloads_definitions.py:198:9 - error: Method "bad_override" is marked as override, but no base method of same name is present (reportGeneralTypeIssues)
overloads_definitions.py:222:9 - error: @override decorator should be applied only to the implementation (reportInconsistentOverload)
overloads_definitions.py:226:9 - error: @override decorator should be applied only to the implementation (reportInconsistentOverload)
"""
