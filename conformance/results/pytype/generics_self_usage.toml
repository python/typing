conformant = "Unsupported"
notes = """
Does not understand `Self` type.
"""
output = """
generics_self_usage.py:58:9: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in foo: Invalid type annotation 'Self'  [invalid-annotation]

        def nested(z: int, inner_self: Self) -> Self:
        \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m
            print(z)
\u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m
            print(inner_self.x)
\u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m
            return inner_self
\u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_self_usage.py:73:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Self'  [invalid-annotation]

def foo(bar: Self) -> Self: ...  # E: not within a class
\u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_self_usage.py:76:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Self' for bar [invalid-annotation]

bar: Self  # E: not within a class
\u001b[1m\u001b[31m~~~~~~~~~\u001b[39m\u001b[0m

generics_self_usage.py:82:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in has_existing_self_annotation: bad return type [bad-return-type]

    def has_existing_self_annotation(self: TFoo2) -> Self: ... # E
\u001b[1m\u001b[31m\u001b[39m\u001b[0m

generics_self_usage.py:86:9: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in return_concrete_type: bad return type [bad-return-type]

        return Foo3()  # E (see FooChild below for rationale)
        \u001b[1m\u001b[31m~~~~~~~~~~~~~\u001b[39m\u001b[0m

Called from (traceback):
  line 92, in child_method
generics_self_usage.py:103:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid base class: Self [base-class-error]

class Baz2(Self): ...  # E
\u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_self_usage.py:111:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in Base: Invalid type annotation 'Self'  [invalid-annotation]

    def make() -> Self:  # E
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m
        ...
\u001b[1m\u001b[31m~~~~~~~~~~~\u001b[39m\u001b[0m

generics_self_usage.py:116:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in Base: Invalid type annotation 'Self'  [invalid-annotation]

    def return_parameter(foo: Self) -> Self:  # E
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m
        ...
\u001b[1m\u001b[31m~~~~~~~~~~~\u001b[39m\u001b[0m

generics_self_usage.py:122:9: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in __new__: bad return type [bad-return-type]

        ...
        \u001b[1m\u001b[31m~~~\u001b[39m\u001b[0m

generics_self_usage.py:126:9: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in __mul__: bad return type [bad-return-type]

        ...
        \u001b[1m\u001b[31m~~~\u001b[39m\u001b[0m

"""
conformance_automated = "Fail"
errors_diff = """
Line 101: Expected 1 errors
Line 106: Expected 1 errors
Line 121: Expected 1 errors
Line 125: Expected 1 errors
Line 58: Unexpected errors ["generics_self_usage.py:58:9: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in foo: Invalid type annotation 'Self'  [invalid-annotation]"]
Line 122: Unexpected errors ['generics_self_usage.py:122:9: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in __new__: bad return type [bad-return-type]']
Line 126: Unexpected errors ['generics_self_usage.py:126:9: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in __mul__: bad return type [bad-return-type]']
"""
