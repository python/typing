conformant = "Partial"
notes = """
Rejects valid specialization of ParamSpec using list expression.
Does not reject invalid specialization of class with both TypeVar and ParamSpec.
Reports error for valid method call involving ParamSpec.
"""
output = """
generics_paramspec_specialization.py:32:15: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation '[int, bool]'  [invalid-annotation]

def func22(x: ClassB[int, [int, bool], ...]) -> str:  # OK
              \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_paramspec_specialization.py:32:15: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Ellipsis'  [invalid-annotation]

def func22(x: ClassB[int, [int, bool], ...]) -> str:  # OK
              \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_paramspec_specialization.py:36:15: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Ellipsis'  [invalid-annotation]

def func23(x: ClassA[int, ...]) -> str:  # OK
              \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_paramspec_specialization.py:40:15: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation '[]'  [invalid-annotation]

def func24(x: ClassB[int, [], []]) -> str:  # OK
              \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_paramspec_specialization.py:52:15: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation '[int, str, bool]'  [invalid-annotation]

def func30(x: ClassC[[int, str, bool]]) -> None:  # OK
              \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_paramspec_specialization.py:53:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in func30: Function <callable> expects 1 arg(s), got 3 [wrong-arg-count]

    x.f(0, "", True)  # OK
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_paramspec_specialization.py:54:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in func30: Function <callable> expects 1 arg(s), got 3 [wrong-arg-count]

    x.f("", "", True)  # E
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_paramspec_specialization.py:55:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in func30: Function <callable> expects 1 arg(s), got 3 [wrong-arg-count]

    x.f(0, "", "")  # E
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_paramspec_specialization.py:58:15: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'ClassC[int, str, bool]'  [invalid-annotation]

def func31(x: ClassC[int, str, bool]) -> None:  # OK
              \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_paramspec_specialization.py:59:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in func31: Function <callable> expects 1 arg(s), got 3 [wrong-arg-count]

    x.f(0, "", True)  # OK
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_paramspec_specialization.py:60:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in func31: Function <callable> expects 1 arg(s), got 3 [wrong-arg-count]

    x.f("", "", True)  # E
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_paramspec_specialization.py:61:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in func31: Function <callable> expects 1 arg(s), got 3 [wrong-arg-count]

    x.f(0, "", "")  # E
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~\u001b[39m\u001b[0m

"""
conformance_automated = "Fail"
errors_diff = """
Line 44: Expected 1 errors
Line 32: Unexpected errors ["generics_paramspec_specialization.py:32:15: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation '[int, bool]'  [invalid-annotation]", "generics_paramspec_specialization.py:32:15: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation 'Ellipsis'  [invalid-annotation]"]
Line 36: Unexpected errors ["generics_paramspec_specialization.py:36:15: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation 'Ellipsis'  [invalid-annotation]"]
Line 40: Unexpected errors ["generics_paramspec_specialization.py:40:15: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation '[]'  [invalid-annotation]"]
Line 52: Unexpected errors ["generics_paramspec_specialization.py:52:15: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation '[int, str, bool]'  [invalid-annotation]"]
Line 53: Unexpected errors ['generics_paramspec_specialization.py:53:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in func30: Function <callable> expects 1 arg(s), got 3 [wrong-arg-count]']
Line 58: Unexpected errors ["generics_paramspec_specialization.py:58:15: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation 'ClassC[int, str, bool]'  [invalid-annotation]"]
Line 59: Unexpected errors ['generics_paramspec_specialization.py:59:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in func31: Function <callable> expects 1 arg(s), got 3 [wrong-arg-count]']
"""
