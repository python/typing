conformant = "Unsupported"
notes = """
Does not support TypeVarTuple.
"""
output = """
generics_typevartuple_basic.py:7:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: typing.TypeVarTuple not supported yet [not-supported-yet]

from typing import Generic, NewType, TypeVarTuple, assert_type
\u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:9:6: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function TypeVarTuple.__init__ expects 1 arg(s), got 2 [wrong-arg-count]

Ts = TypeVarTuple("Ts")
     \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:12:14: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Generic'  [invalid-annotation]

class Array1(Generic[*Ts]):
             \u001b[1m\u001b[31m~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:16:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: No attribute '__iter__' on TypeVarTuple [attribute-error]

def func1(*args: *Ts) -> tuple[*Ts]:
\u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m
    ...
\u001b[1m\u001b[31m~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:16:26: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation '<instance of tuple[nothing, ...]>'  [invalid-annotation]

def func1(*args: *Ts) -> tuple[*Ts]:
                         \u001b[1m\u001b[31m~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:17:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in func1: bad return type [bad-return-type]

    ...
    \u001b[1m\u001b[31m~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:20:9: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function TypeVarTuple.__init__ expects 1 arg(s), got 2 [wrong-arg-count]

Shape = TypeVarTuple("Shape")
        \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:23:13: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Generic'  [invalid-annotation]

class Array(Generic[*Shape]):
            \u001b[1m\u001b[31m~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:24:31: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in Array: Invalid type annotation '<instance of tuple[nothing, ...]>'  [invalid-annotation]

    def __init__(self, shape: tuple[*Shape]):
                              \u001b[1m\u001b[31m~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:25:9: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in __init__: Invalid type annotation 'tuple[*Shape,]'  [invalid-annotation]

        self._shape: tuple[*Shape] = shape
        \u001b[1m\u001b[31m~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:27:28: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in Array: Invalid type annotation '<instance of tuple[nothing, ...]>'  [invalid-annotation]

    def get_shape(self) -> tuple[*Shape]:
                           \u001b[1m\u001b[31m~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:36:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class Array is not indexable [not-indexable]

v1: Array[Height, Width] = Array((Height(1), Width(2)))  # OK
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:36:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Array[Height, Width]'  [invalid-annotation]

v1: Array[Height, Width] = Array((Height(1), Width(2)))  # OK
\u001b[1m\u001b[31m~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:36:28: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function Array.__init__ was called with the wrong arguments [wrong-arg-types]

v1: Array[Height, Width] = Array((Height(1), Width(2)))  # OK
                           \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:37:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class Array is not indexable [not-indexable]

v2: Array[Batch, Height, Width] = Array((Batch(1), Height(1), Width(1)))  # OK
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:37:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Array[Batch, Height, Width]'  [invalid-annotation]

v2: Array[Batch, Height, Width] = Array((Batch(1), Height(1), Width(1)))  # OK
\u001b[1m\u001b[31m~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:37:35: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function Array.__init__ was called with the wrong arguments [wrong-arg-types]

v2: Array[Batch, Height, Width] = Array((Batch(1), Height(1), Width(1)))  # OK
                                  \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:38:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class Array is not indexable [not-indexable]

v3: Array[Time, Batch, Height, Width] = Array(
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:38:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Array[Time, Batch, Height, Width]'  [invalid-annotation]

v3: Array[Time, Batch, Height, Width] = Array(
\u001b[1m\u001b[31m~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:38:41: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function Array.__init__ was called with the wrong arguments [wrong-arg-types]

v3: Array[Time, Batch, Height, Width] = Array(
                                        \u001b[1m\u001b[31m~~~~~~\u001b[39m\u001b[0m
    (Time(1), Batch(1), Height(1), Width(1))
\u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m
)  # OK
\u001b[1m\u001b[31m~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:42:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class Array is not indexable [not-indexable]

v4: Array[Height, Width] = Array(Height(1))  # E
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:42:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Array[Height, Width]'  [invalid-annotation]

v4: Array[Height, Width] = Array(Height(1))  # E
\u001b[1m\u001b[31m~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:42:28: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function Array.__init__ was called with the wrong arguments [wrong-arg-types]

v4: Array[Height, Width] = Array(Height(1))  # E
                           \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:43:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class Array is not indexable [not-indexable]

v5: Array[Batch, Height, Width] = Array((Batch(1), Width(1)))  # E
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:43:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Array[Batch, Height, Width]'  [invalid-annotation]

v5: Array[Batch, Height, Width] = Array((Batch(1), Width(1)))  # E
\u001b[1m\u001b[31m~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:43:35: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function Array.__init__ was called with the wrong arguments [wrong-arg-types]

v5: Array[Batch, Height, Width] = Array((Batch(1), Width(1)))  # E
                                  \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:44:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class Array is not indexable [not-indexable]

v6: Array[Time, Batch, Height, Width] = Array(  # E[v6]
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:44:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Array[Time, Batch, Height, Width]'  [invalid-annotation]

v6: Array[Time, Batch, Height, Width] = Array(  # E[v6]
\u001b[1m\u001b[31m~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:44:41: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function Array.__init__ was called with the wrong arguments [wrong-arg-types]

v6: Array[Time, Batch, Height, Width] = Array(  # E[v6]
                                        \u001b[1m\u001b[31m~~~~~~~~~~~~~~~\u001b[39m\u001b[0m
    (Time(1), Batch(1), Width(1), Height(1))  # E[v6]
\u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m
)
\u001b[1m\u001b[31m~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:52:14: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Generic'  [invalid-annotation]

class ClassA(Generic[Shape]):  # E: not unpacked
             \u001b[1m\u001b[31m~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:53:31: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in ClassA: Invalid type annotation '<instance of TypeVarTuple>'  [invalid-annotation]

    def __init__(self, shape: tuple[Shape]):  # E: not unpacked
                              \u001b[1m\u001b[31m~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:54:9: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in __init__: Invalid type annotation 'tuple[*Shape,]'  [invalid-annotation]

        self._shape: tuple[*Shape] = shape
        \u001b[1m\u001b[31m~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:56:28: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in ClassA: Invalid type annotation '<instance of TypeVarTuple>'  [invalid-annotation]

    def get_shape(self) -> tuple[Shape]:  # E: not unpacked
                           \u001b[1m\u001b[31m~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:59:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in ClassA: Invalid type annotation '<instance of TypeVarTuple>' for args [invalid-annotation]

    def method1(*args: Shape) -> None:  # E: not unpacked
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m
        ...
\u001b[1m\u001b[31m~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:65:7: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function TypeVarTuple.__init__ expects 1 arg(s), got 3 [wrong-arg-count]

Ts1 = TypeVarTuple("Ts1", covariant=True)  # E
      \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:66:7: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function TypeVarTuple.__init__ expects 1 arg(s), got 4 [wrong-arg-count]

Ts2 = TypeVarTuple("Ts2", int, float)  # E
      \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:67:7: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function TypeVarTuple.__init__ expects 1 arg(s), got 3 [wrong-arg-count]

Ts3 = TypeVarTuple("Ts3", bound=int)  # E
      \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:75:17: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation '<instance of tuple[nothing, ...]>'  [invalid-annotation]

def func2(arg1: tuple[*Ts], arg2: tuple[*Ts]) -> tuple[*Ts]:
                \u001b[1m\u001b[31m~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:75:35: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation '<instance of tuple[nothing, ...]>'  [invalid-annotation]

def func2(arg1: tuple[*Ts], arg2: tuple[*Ts]) -> tuple[*Ts]:
                                  \u001b[1m\u001b[31m~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:75:50: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation '<instance of tuple[nothing, ...]>'  [invalid-annotation]

def func2(arg1: tuple[*Ts], arg2: tuple[*Ts]) -> tuple[*Ts]:
                                                 \u001b[1m\u001b[31m~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:76:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in func2: bad return type [bad-return-type]

    ...
    \u001b[1m\u001b[31m~~~\u001b[39m\u001b[0m

Called from (traceback):
  line 84, in current file
generics_typevartuple_basic.py:84:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: tuple[Any] [assert-type]

assert_type(func2((0,), (1,)), tuple[int])  # OK
\u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:90:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function func2 was called with the wrong arguments [wrong-arg-types]

func2((0, 0), (0,))  # E
\u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:93:17: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class Array is not indexable [not-indexable]

def multiply(x: Array[*Shape], y: Array[*Shape]) -> Array[*Shape]:
                \u001b[1m\u001b[31m~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:93:35: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class Array is not indexable [not-indexable]

def multiply(x: Array[*Shape], y: Array[*Shape]) -> Array[*Shape]:
                                  \u001b[1m\u001b[31m~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:93:53: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class Array is not indexable [not-indexable]

def multiply(x: Array[*Shape], y: Array[*Shape]) -> Array[*Shape]:
                                                    \u001b[1m\u001b[31m~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:94:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in multiply: bad return type [bad-return-type]

    ...
    \u001b[1m\u001b[31m~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:97:14: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class Array is not indexable [not-indexable]

def func3(x: Array[Height], y: Array[Width], z: Array[Height, Width]):
             \u001b[1m\u001b[31m~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:97:32: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class Array is not indexable [not-indexable]

def func3(x: Array[Height], y: Array[Width], z: Array[Height, Width]):
                               \u001b[1m\u001b[31m~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:97:49: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class Array is not indexable [not-indexable]

def func3(x: Array[Height], y: Array[Width], z: Array[Height, Width]):
                                                \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:106:14: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Invalid type annotation 'Generic'  [invalid-annotation]

class Array3(Generic[*Ts1, *Ts2]):  # E
             \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

generics_typevartuple_basic.py:106:22: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function list.extend was called with the wrong arguments [wrong-arg-types]

class Array3(Generic[*Ts1, *Ts2]):  # E
                     \u001b[1m\u001b[31m~~~~~~~~~~\u001b[39m\u001b[0m

"""
conformance_automated = "Fail"
errors_diff = """
Line 89: Expected 1 errors
Line 99: Expected 1 errors
Line 100: Expected 1 errors
Line 7: Unexpected errors ['generics_typevartuple_basic.py:7:1: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: typing.TypeVarTuple not supported yet [not-supported-yet]']
Line 9: Unexpected errors ['generics_typevartuple_basic.py:9:6: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Function TypeVarTuple.__init__ expects 1 arg(s), got 2 [wrong-arg-count]']
Line 12: Unexpected errors ["generics_typevartuple_basic.py:12:14: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation 'Generic'  [invalid-annotation]"]
Line 16: Unexpected errors ["generics_typevartuple_basic.py:16:1: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: No attribute '__iter__' on TypeVarTuple [attribute-error]", "generics_typevartuple_basic.py:16:26: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation '<instance of tuple[nothing, ...]>'  [invalid-annotation]"]
Line 17: Unexpected errors ['generics_typevartuple_basic.py:17:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in func1: bad return type [bad-return-type]']
Line 20: Unexpected errors ['generics_typevartuple_basic.py:20:9: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Function TypeVarTuple.__init__ expects 1 arg(s), got 2 [wrong-arg-count]']
Line 23: Unexpected errors ["generics_typevartuple_basic.py:23:13: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation 'Generic'  [invalid-annotation]"]
Line 24: Unexpected errors ["generics_typevartuple_basic.py:24:31: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in Array: Invalid type annotation '<instance of tuple[nothing, ...]>'  [invalid-annotation]"]
Line 25: Unexpected errors ["generics_typevartuple_basic.py:25:9: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in __init__: Invalid type annotation 'tuple[*Shape,]'  [invalid-annotation]"]
Line 27: Unexpected errors ["generics_typevartuple_basic.py:27:28: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in Array: Invalid type annotation '<instance of tuple[nothing, ...]>'  [invalid-annotation]"]
Line 36: Unexpected errors ['generics_typevartuple_basic.py:36:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: class Array is not indexable [not-indexable]', "generics_typevartuple_basic.py:36:1: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation 'Array[Height, Width]'  [invalid-annotation]", 'generics_typevartuple_basic.py:36:28: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Function Array.__init__ was called with the wrong arguments [wrong-arg-types]']
Line 37: Unexpected errors ['generics_typevartuple_basic.py:37:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: class Array is not indexable [not-indexable]', "generics_typevartuple_basic.py:37:1: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation 'Array[Batch, Height, Width]'  [invalid-annotation]", 'generics_typevartuple_basic.py:37:35: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Function Array.__init__ was called with the wrong arguments [wrong-arg-types]']
Line 38: Unexpected errors ['generics_typevartuple_basic.py:38:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: class Array is not indexable [not-indexable]', "generics_typevartuple_basic.py:38:1: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation 'Array[Time, Batch, Height, Width]'  [invalid-annotation]", 'generics_typevartuple_basic.py:38:41: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Function Array.__init__ was called with the wrong arguments [wrong-arg-types]']
Line 54: Unexpected errors ["generics_typevartuple_basic.py:54:9: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in __init__: Invalid type annotation 'tuple[*Shape,]'  [invalid-annotation]"]
Line 75: Unexpected errors ["generics_typevartuple_basic.py:75:17: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation '<instance of tuple[nothing, ...]>'  [invalid-annotation]", "generics_typevartuple_basic.py:75:35: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation '<instance of tuple[nothing, ...]>'  [invalid-annotation]", "generics_typevartuple_basic.py:75:50: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: Invalid type annotation '<instance of tuple[nothing, ...]>'  [invalid-annotation]"]
Line 76: Unexpected errors ['generics_typevartuple_basic.py:76:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in func2: bad return type [bad-return-type]']
Line 84: Unexpected errors ['generics_typevartuple_basic.py:84:1: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: tuple[Any] [assert-type]']
Line 93: Unexpected errors ['generics_typevartuple_basic.py:93:17: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: class Array is not indexable [not-indexable]', 'generics_typevartuple_basic.py:93:35: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: class Array is not indexable [not-indexable]', 'generics_typevartuple_basic.py:93:53: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: class Array is not indexable [not-indexable]']
Line 94: Unexpected errors ['generics_typevartuple_basic.py:94:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in multiply: bad return type [bad-return-type]']
Line 97: Unexpected errors ['generics_typevartuple_basic.py:97:14: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: class Array is not indexable [not-indexable]', 'generics_typevartuple_basic.py:97:32: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: class Array is not indexable [not-indexable]', 'generics_typevartuple_basic.py:97:49: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in <module>: class Array is not indexable [not-indexable]']
"""
