conformant = "Partial"
notes = """
Does not perform argument expansion (on any types) when matching overloads.
Does not treat multiple matches due to gradual types as ambiguous.
Does not prefer variadic match to indeterminate-length unpacked argument.
"""
conformance_automated = "Fail"
errors_diff = """
Line 115: Expected 1 errors
Line 33: Unexpected errors ['overloads_evaluation.py:33:12: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in example1_1: bad return type [bad-return-type]']
Line 62: Unexpected errors ['overloads_evaluation.py:62:1: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in example1_2: bad return type [bad-return-type]', 'overloads_evaluation.py:62:1: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in example1_2: bad return type [bad-return-type]']
Line 85: Unexpected errors ['overloads_evaluation.py:85:12: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in example2: bad return type [bad-return-type]']
Line 106: Unexpected errors ['overloads_evaluation.py:106:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in check_expand_union: str [assert-type]']
Line 130: Unexpected errors ['overloads_evaluation.py:130:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in expand_bool: bad return type [bad-return-type]', 'overloads_evaluation.py:130:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in expand_bool: bad return type [bad-return-type]']
Line 134: Unexpected errors ['overloads_evaluation.py:134:12: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in check_expand_bool: Function expand_bool was called with the wrong arguments [wrong-arg-types]']
Line 135: Unexpected errors ['overloads_evaluation.py:135:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in check_expand_bool: Any [assert-type]']
Line 156: Unexpected errors ['overloads_evaluation.py:156:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in expand_enum: bad return type [bad-return-type]']
Line 160: Unexpected errors ['overloads_evaluation.py:160:12: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in check_expand_enum: Function expand_enum was called with the wrong arguments [wrong-arg-types]']
Line 161: Unexpected errors ['overloads_evaluation.py:161:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in check_expand_enum: Any [assert-type]']
Line 176: Unexpected errors ['overloads_evaluation.py:176:12: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in expand_type_union: bad return type [bad-return-type]']
Line 181: Unexpected errors ['overloads_evaluation.py:181:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in check_expand_type_union: int [assert-type]']
Line 200: Unexpected errors ['overloads_evaluation.py:200:12: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in expand_tuple: bad return type [bad-return-type]']
Line 205: Unexpected errors ['overloads_evaluation.py:205:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in check_expand_tuple: int [assert-type]']
Line 224: Unexpected errors ['overloads_evaluation.py:224:12: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in variadic: bad return type [bad-return-type]']
Line 234: Unexpected errors ['overloads_evaluation.py:234:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in check_variadic: str [assert-type]']
Line 264: Unexpected errors ['overloads_evaluation.py:264:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in check_example4: list[int] [assert-type]']
Line 280: Unexpected errors ['overloads_evaluation.py:280:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in check_example5: list[int] [assert-type]']
Line 291: Unexpected errors ['overloads_evaluation.py:291:1: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in example6: bad return type [bad-return-type]', 'overloads_evaluation.py:291:1: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in example6: bad return type [bad-return-type]', 'overloads_evaluation.py:291:1: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in example6: bad return type [bad-return-type]']
Line 345: Unexpected errors ['overloads_evaluation.py:345:5: \\x1b[1m\\x1b[31merror\\x1b[39m\\x1b[0m: in check_example7: list[int] [assert-type]']
"""
output = """
overloads_evaluation.py:33:12: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in example1_1: bad return type [bad-return-type]

    return 1
           \u001b[1m\u001b[31m~\u001b[39m\u001b[0m

Called from (traceback):
  line 48, in current file
overloads_evaluation.py:38:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Missing parameter 'x' in call to function example1_1 [missing-parameter]

example1_1()  # E: no matching overload
\u001b[1m\u001b[31m~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:46:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function example1_1 was called with the wrong arguments [wrong-arg-types]

example1_1(1, 1)  # E: Literal[1] not assignable to str
\u001b[1m\u001b[31m~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:51:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function example1_1 was called with the wrong arguments [wrong-arg-types]

example1_1(1)  # E: Literal[1] not assignable to str
\u001b[1m\u001b[31m~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:62:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in example1_2: bad return type [bad-return-type]

def example1_2(b: bool = True) -> float: ...
\u001b[1m\u001b[31m\u001b[39m\u001b[0m

overloads_evaluation.py:62:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in example1_2: bad return type [bad-return-type]

def example1_2(b: bool = True) -> float: ...
\u001b[1m\u001b[31m\u001b[39m\u001b[0m

overloads_evaluation.py:85:12: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in example2: bad return type [bad-return-type]

    return 1
           \u001b[1m\u001b[31m~\u001b[39m\u001b[0m

overloads_evaluation.py:106:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in check_expand_union: str [assert-type]

    assert_type(ret1, int | str)
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:130:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in expand_bool: bad return type [bad-return-type]

    return int(x)
    \u001b[1m\u001b[31m~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:130:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in expand_bool: bad return type [bad-return-type]

    return int(x)
    \u001b[1m\u001b[31m~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:134:12: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in check_expand_bool: Function expand_bool was called with the wrong arguments [wrong-arg-types]

    ret1 = expand_bool(v)
           \u001b[1m\u001b[31m~~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:135:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in check_expand_bool: Any [assert-type]

    assert_type(ret1, Literal[0, 1])
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:156:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in expand_enum: bad return type [bad-return-type]

    return x.value
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:160:12: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in check_expand_enum: Function expand_enum was called with the wrong arguments [wrong-arg-types]

    ret1 = expand_enum(v)
           \u001b[1m\u001b[31m~~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:161:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in check_expand_enum: Any [assert-type]

    assert_type(ret1, Literal[0, 1])
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:176:12: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in expand_type_union: bad return type [bad-return-type]

    return 1
           \u001b[1m\u001b[31m~\u001b[39m\u001b[0m

overloads_evaluation.py:181:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in check_expand_type_union: int [assert-type]

    assert_type(ret1, int | str)
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:200:12: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in expand_tuple: bad return type [bad-return-type]

    return 1
           \u001b[1m\u001b[31m~\u001b[39m\u001b[0m

overloads_evaluation.py:205:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in check_expand_tuple: int [assert-type]

    assert_type(ret1, int | str)
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:224:12: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in variadic: bad return type [bad-return-type]

    return 1
           \u001b[1m\u001b[31m~\u001b[39m\u001b[0m

overloads_evaluation.py:234:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in check_variadic: str [assert-type]

    assert_type(ret1, int)
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:264:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in check_example4: list[int] [assert-type]

    assert_type(ret2, Any)
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:280:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in check_example5: list[int] [assert-type]

    assert_type(example5(b), Any)
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

overloads_evaluation.py:291:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in example6: bad return type [bad-return-type]

def example6(a: float, b: T) -> T: ...
\u001b[1m\u001b[31m\u001b[39m\u001b[0m

Called from (traceback):
  line 321, in check_example6
overloads_evaluation.py:291:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in example6: bad return type [bad-return-type]

def example6(a: float, b: T) -> T: ...
\u001b[1m\u001b[31m\u001b[39m\u001b[0m

Called from (traceback):
  line 315, in check_example6
overloads_evaluation.py:291:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in example6: bad return type [bad-return-type]

def example6(a: float, b: T) -> T: ...
\u001b[1m\u001b[31m\u001b[39m\u001b[0m

overloads_evaluation.py:345:5: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in check_example7: list[int] [assert-type]

    assert_type(ret3, Any)
    \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

"""
