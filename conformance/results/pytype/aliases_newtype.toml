conformant = "Partial"
notes = """
Does not reject use of NewType in `isinstance` call.
Does not reject use of NewType in class definition statement.
Does not report inconsistency between name of NewType and assigned identifier name.
Does not reject use of NewType with generic class with TypeVar.
Does not reject use of NewType with protocol class.
Does not reject use of NewType with TypedDict class.
Does not reject use of NewType with Any.
"""
output = """
aliases_newtype.py:11:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function UserId.__init__ was called with the wrong arguments [wrong-arg-types]

UserId("user")  # E: incorrect type
\u001b[1m\u001b[31m~~~~~~~~~~~~~~\u001b[39m\u001b[0m

aliases_newtype.py:12:1: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Type annotation for u1 does not match type of assignment [annotation-type-mismatch]

u1: UserId = 42  # E: incorrect type
\u001b[1m\u001b[31m~~\u001b[39m\u001b[0m

aliases_newtype.py:38:6: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: class GoodNewType1 is not indexable [not-indexable]

nt1: GoodNewType1[int]  # E: NewType cannot be generic
     \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

aliases_newtype.py:60:15: \u001b[1m\u001b[31merror\u001b[39m\u001b[0m: in <module>: Function typing.NewType expects 2 arg(s), got 3 [wrong-arg-count]

BadNewType6 = NewType("BadNewType6", int, int)  # E: too many arguments
              \u001b[1m\u001b[31m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[39m\u001b[0m

"""
conformance_automated = "Fail"
errors_diff = """
Line 20: Expected 1 errors
Line 23: Expected 1 errors
Line 32: Expected 1 errors
Line 44: Expected 1 errors
Line 47: Expected 1 errors
Line 49: Expected 1 errors
Line 51: Expected 1 errors
Line 58: Expected 1 errors
Line 62: Expected 1 errors
"""
