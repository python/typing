conformant = "Partial"
notes = """
Does not require concrete classes to be passed to type[Proto]
"""
conformance_automated = "Fail"
errors_diff = """
Line 29: Expected 1 errors
Line 34: Expected 1 errors
Line 104: Expected 1 errors
Line 106: Expected 1 errors
Line 107: Expected 1 errors
Line 108: Expected 1 errors
Line 26: Unexpected errors ['Cannot instantiate `Proto` because it is a protocol [bad-instantiation]']
"""
output = """
ERROR /Users/dannyyang/Documents/Documents/GitHub/typing/conformance/tests/protocols_class_objects.py:26:15-17: Cannot instantiate `Proto` because it is a protocol [bad-instantiation]
ERROR /Users/dannyyang/Documents/Documents/GitHub/typing/conformance/tests/protocols_class_objects.py:58:16-25: `type[ConcreteA]` is not assignable to `ProtoA1` [bad-assignment]
ERROR /Users/dannyyang/Documents/Documents/GitHub/typing/conformance/tests/protocols_class_objects.py:74:16-25: `type[ConcreteB]` is not assignable to `ProtoB1` [bad-assignment]
"""
