conformant = "Unupported"
notes = """
Does not honor metaclass __call__ method when evaluating constructor call.
Does not skip evaluation of __new__ and __init__ if custom metaclass call returns non-class.
"""
conformance_automated = "Fail"
errors_diff = """
Line 26: Unexpected errors ['constructors_call_metaclass.py:26: error: Expression is of type "Class1", not "Never"  [assert-type]', 'constructors_call_metaclass.py:26: error: Missing positional argument "x" in call to "Class1"  [call-arg]']
Line 39: Unexpected errors ['constructors_call_metaclass.py:39: error: Expression is of type "Class2", not "int | Meta2"  [assert-type]', 'constructors_call_metaclass.py:39: error: Missing positional argument "x" in call to "Class2"  [call-arg]']
Line 46: Unexpected errors ['constructors_call_metaclass.py:46: error: Argument 2 for "super" not an instance of argument 1  [misc]']
"""
output = """
constructors_call_metaclass.py:26: error: Expression is of type "Class1", not "Never"  [assert-type]
constructors_call_metaclass.py:26: error: Missing positional argument "x" in call to "Class1"  [call-arg]
constructors_call_metaclass.py:39: error: Expression is of type "Class2", not "int | Meta2"  [assert-type]
constructors_call_metaclass.py:39: error: Missing positional argument "x" in call to "Class2"  [call-arg]
constructors_call_metaclass.py:46: error: Argument 2 for "super" not an instance of argument 1  [misc]
constructors_call_metaclass.py:54: error: Missing positional argument "x" in call to "Class3"  [call-arg]
constructors_call_metaclass.py:68: error: Missing positional argument "x" in call to "Class4"  [call-arg]
"""
