conformant = "Partial"
notes = """
Does not expand boolean arguments to Literal[True] and Literal[False].
Does not expand enum arguments to literal variants.
Does not expand tuple arguments to possible combinations.
Does not evaluate Any in some cases where overload is ambiguous.
Evaluates Any in some cases where overload is not ambiguous.
"""
conformance_automated = "Fail"
errors_diff = """
Line 134: Unexpected errors ['overloads_evaluation.py:134: error: No overload variant of "expand_bool" matches argument type "bool"  [call-overload]']
Line 135: Unexpected errors ['overloads_evaluation.py:135: error: Expression is of type "Any", not "Literal[0, 1]"  [assert-type]']
Line 160: Unexpected errors ['overloads_evaluation.py:160: error: No overload variant of "expand_enum" matches argument type "Color"  [call-overload]']
Line 161: Unexpected errors ['overloads_evaluation.py:161: error: Expression is of type "Any", not "Literal[0, 1]"  [assert-type]']
Line 204: Unexpected errors ['overloads_evaluation.py:204: error: Argument 1 to "expand_tuple" has incompatible type "tuple[int, int | str]"; expected "tuple[int, int]"  [arg-type]']
Line 205: Unexpected errors ['overloads_evaluation.py:205: error: Expression is of type "int", not "int | str"  [assert-type]']
Line 264: Unexpected errors ['overloads_evaluation.py:264: error: Expression is of type "list[Any]", not "Any"  [assert-type]']
Line 280: Unexpected errors ['overloads_evaluation.py:280: error: Expression is of type "list[Any]", not "Any"  [assert-type]']
Line 301: Unexpected errors ['overloads_evaluation.py:301: error: Expression is of type "Any", not "float"  [assert-type]']
Line 345: Unexpected errors ['overloads_evaluation.py:345: error: Expression is of type "list[Any]", not "Any"  [assert-type]']
"""
output = """
overloads_evaluation.py:38: error: All overload variants of "example1_1" require at least one argument  [call-overload]
overloads_evaluation.py:38: note: Possible overload variants:
overloads_evaluation.py:38: note:     def example1_1(x: int, y: str) -> int
overloads_evaluation.py:38: note:     def example1_1(x: str) -> str
overloads_evaluation.py:46: error: No overload variant of "example1_1" matches argument types "int", "int"  [call-overload]
overloads_evaluation.py:46: note: Possible overload variants:
overloads_evaluation.py:46: note:     def example1_1(x: int, y: str) -> int
overloads_evaluation.py:46: note:     def example1_1(x: str) -> str
overloads_evaluation.py:51: error: No overload variant of "example1_1" matches argument type "int"  [call-overload]
overloads_evaluation.py:51: note: Possible overload variants:
overloads_evaluation.py:51: note:     def example1_1(x: int, y: str) -> int
overloads_evaluation.py:51: note:     def example1_1(x: str) -> str
overloads_evaluation.py:115: error: Argument 1 to "example2" has incompatible type "int | str"; expected "int"  [arg-type]
overloads_evaluation.py:115: error: Argument 2 to "example2" has incompatible type "int | str"; expected "str"  [arg-type]
overloads_evaluation.py:134: error: No overload variant of "expand_bool" matches argument type "bool"  [call-overload]
overloads_evaluation.py:134: note: Possible overload variants:
overloads_evaluation.py:134: note:     def expand_bool(x: Literal[False]) -> Literal[0]
overloads_evaluation.py:134: note:     def expand_bool(x: Literal[True]) -> Literal[1]
overloads_evaluation.py:135: error: Expression is of type "Any", not "Literal[0, 1]"  [assert-type]
overloads_evaluation.py:160: error: No overload variant of "expand_enum" matches argument type "Color"  [call-overload]
overloads_evaluation.py:160: note: Possible overload variants:
overloads_evaluation.py:160: note:     def expand_enum(x: Literal[Color.RED]) -> Literal[0]
overloads_evaluation.py:160: note:     def expand_enum(x: Literal[Color.BLUE]) -> Literal[1]
overloads_evaluation.py:161: error: Expression is of type "Any", not "Literal[0, 1]"  [assert-type]
overloads_evaluation.py:204: error: Argument 1 to "expand_tuple" has incompatible type "tuple[int, int | str]"; expected "tuple[int, int]"  [arg-type]
overloads_evaluation.py:205: error: Expression is of type "int", not "int | str"  [assert-type]
overloads_evaluation.py:264: error: Expression is of type "list[Any]", not "Any"  [assert-type]
overloads_evaluation.py:280: error: Expression is of type "list[Any]", not "Any"  [assert-type]
overloads_evaluation.py:301: error: Expression is of type "Any", not "float"  [assert-type]
overloads_evaluation.py:345: error: Expression is of type "list[Any]", not "Any"  [assert-type]
"""
