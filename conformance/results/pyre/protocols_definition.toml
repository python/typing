conformant = "Partial"
notes = """
Does not reject ClassVar in concrete class when attribute in protocol is not ClassVar or vice versa.
Does not reject read-only property in concrete class when attribute in protocol is mutable.
Does not reject covariant attribute type when protocol attribute is mutable.
Does not reject read-only property in concrete class when protocol has settable property.
Does not reject immutable named tuple attribute in concrete class when protocol attribute is mutable.
Does not reject immutable frozen dataclass attribute in concrete class when protocol attribute is mutable.
"""
output = """
protocols_definition.py:30:10 Incompatible parameter type [6]: In call `close_all`, for 1st positional argument, expected `Iterable[SupportsClose]` but got `Iterable[int]`.
protocols_definition.py:67:8 Undefined attribute [16]: `Template` has no attribute `temp`.
protocols_definition.py:114:0 Incompatible variable type [9]: v2_bad1 is declared to have type `Template2` but is used as type `Concrete2_Bad1`.
protocols_definition.py:115:0 Incompatible variable type [9]: v2_bad2 is declared to have type `Template2` but is used as type `Concrete2_Bad2`.
protocols_definition.py:156:0 Incompatible variable type [9]: v3_bad1 is declared to have type `Template3` but is used as type `Concrete3_Bad1`.
protocols_definition.py:159:0 Incompatible variable type [9]: v3_bad4 is declared to have type `Template3` but is used as type `Concrete3_Bad4`.
protocols_definition.py:218:0 Incompatible variable type [9]: v4_bad1 is declared to have type `Template4` but is used as type `Concrete4_Bad1`.
protocols_definition.py:219:0 Incompatible variable type [9]: v4_bad2 is declared to have type `Template4` but is used as type `Concrete4_Bad2`.
protocols_definition.py:285:0 Incompatible variable type [9]: v5_bad1 is declared to have type `Template5` but is used as type `Concrete5_Bad1`.
protocols_definition.py:286:0 Incompatible variable type [9]: v5_bad2 is declared to have type `Template5` but is used as type `Concrete5_Bad2`.
protocols_definition.py:287:0 Incompatible variable type [9]: v5_bad3 is declared to have type `Template5` but is used as type `Concrete5_Bad3`.
protocols_definition.py:288:0 Incompatible variable type [9]: v5_bad4 is declared to have type `Template5` but is used as type `Concrete5_Bad4`.
protocols_definition.py:289:0 Incompatible variable type [9]: v5_bad5 is declared to have type `Template5` but is used as type `Concrete5_Bad5`.
"""
conformance_automated = "Fail"
errors_diff = """
Line 116: Expected 1 errors
Line 117: Expected 1 errors
Line 157: Expected 1 errors
Line 158: Expected 1 errors
Line 160: Expected 1 errors
Line 339: Expected 1 errors
Line 340: Expected 1 errors
Line 341: Expected 1 errors
"""
